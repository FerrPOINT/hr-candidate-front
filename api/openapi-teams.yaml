openapi: 3.0.0
info:
  title: HR Recruiter API — Teams
  version: 1.0.0
  description: |
    OpenAPI спецификация для управления командами (teams).
    Самодостаточный файл для генерации и документации.
  contact:
    name: HR Recruiter Team
    email: support@hr-recruiter.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://localhost:8080/api/v1
    description: Local server
  - url: https://api.hr-recruiter.com/api/v1
    description: Production server
tags:
  - name: Teams
    description: Управление командами
paths:  
  /teams:
    get:
      tags:
        - Teams
      summary: Получить список команд
      description: Получить список всех команд с возможностью фильтрации и пагинации
      operationId: listTeams
      security:
        - AdminAuth: []
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: Поиск по названию или описанию команды
        - in: query
          name: page
          schema:
            type: integer
            default: 0
          description: Номер страницы
        - in: query
          name: size
          schema:
            type: integer
            default: 20
          description: Размер страницы
        - in: query
          name: sort
          schema:
            type: string
            default: name
          description: Поле для сортировки
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
        '401':
          description: Неавторизован
        '403':
          description: Доступ запрещен
    post:
      tags:
        - Teams
      summary: Создать команду
      description: Создает новую команду
      operationId: createTeam
      security:
        - AdminAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamCreateRequest'
      responses:
        '201':
          description: Команда успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          description: Некорректные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Неавторизован
        '403':
          description: Доступ запрещен
        '409':
          description: Конфликт - команда с таким названием уже существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /teams/{id}:
    get:
      tags:
        - Teams
      summary: Получить команду по ID
      description: Возвращает информацию о команде по её идентификатору
      operationId: getTeam
      security:
        - AdminAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: ID команды
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '401':
          description: Неавторизован
        '403':
          description: Доступ запрещен
        '404':
          description: Команда не найдена
    patch:
      tags:
        - Teams
      summary: Обновить команду
      description: Обновляет информацию о команде (частично или полностью)
      operationId: patchTeam
      security:
        - AdminAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: ID команды
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamPatchRequest'
      responses:
        '200':
          description: Команда успешно обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          description: Некорректные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Неавторизован
        '403':
          description: Доступ запрещен
        '404':
          description: Команда не найдена
        '409':
          description: Конфликт - команда с таким названием уже существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Teams
      summary: Удалить команду
      description: Удаляет команду по её идентификатору
      operationId: deleteTeam
      security:
        - AdminAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: ID команды
      responses:
        '204':
          description: Команда успешно удалена
        '401':
          description: Неавторизован
        '403':
          description: Доступ запрещен
        '404':
          description: Команда не найдена
        '409':
          description: Конфликт - невозможно удалить команду, содержащую пользователей
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /teams/{id}/users:
    get:
      operationId: getTeamUsersList
      tags:
        - Teams
      summary: Получить список пользователей команды
      description: |
        Получение списка всех пользователей команды с основной информацией.
        Доступен только для роли: admin.
        Возвращает основную информацию о пользователях: имя, фамилия, почта, роль.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: ID команды
      security:
        - AdminAuth: []
      responses:
        '200':
          description: Список пользователей команды
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSummary'
        '401':
          description: Неавторизован
        '403':
          description: Доступ запрещен
        '404':
          description: Команда не найдена
    post:
      tags:
        - Teams
      summary: Добавить пользователя в команду
      description: Добавляет пользователя в команду
      operationId: addUserToTeam
      security:
        - AdminAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: ID команды
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUserToTeamRequest'
      responses:
        '200':
          description: Пользователь успешно добавлен в команду
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSummary'
        '400':
          description: Некорректные данные или пользователь уже в команде
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Неавторизован
        '403':
          description: Доступ запрещен
        '404':
          description: Команда или пользователь не найдены
    delete:
      tags:
        - Teams
      summary: Удалить пользователя из команды
      description: Удаляет пользователя из команды
      operationId: removeUserFromTeam
      security:
        - AdminAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: ID команды
        - in: query
          name: userId
          required: true
          schema:
            type: integer
            format: int64
          description: ID пользователя для удаления из команды
      responses:
        '204':
          description: Пользователь успешно удален из команды
        '400':
          description: Некорректные данные
        '401':
          description: Неавторизован
        '403':
          description: Доступ запрещен
        '404':
          description: Команда или пользователь не найдены

  /users/{userId}/team-members:
    get:
      operationId: getTeamUsersByUserId
      tags:
        - Teams
      summary: Получить список пользователей команды по ID пользователя
      description: |
        Получение списка всех пользователей команды, в которой состоит указанный пользователь.
        Доступен только для роли: admin.
        Возвращает основную информацию о пользователях: имя, фамилия, почта, роль.
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
            format: int64
          description: ID пользователя
      security:
        - AdminAuth: []
      responses:
        '200':
          description: Список пользователей команды
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSummary'
        '401':
          description: Неавторизован
        '403':
          description: Доступ запрещен
        '404':
          description: Пользователь не найден

components:
  securitySchemes:
    AdminAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT токен для администраторов
  schemas:
    Team:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: Уникальный идентификатор команды
          example: 1
        name:
          type: string
          description: Название команды
          example: "Разработка"
        description:
          type: string
          nullable: true
          description: Описание команды
          example: "Команда, отвечающая за разработку ПО"
        owner:
          type: integer
          format: int64
          description: ID владельца команды
          example: 1
      required:
        - id
        - name
        - owner
      description: Модель команды
    TeamCreateRequest:
      type: object
      properties:
        name:
          type: string
          description: Название команды
          example: "Новая команда"
        description:
          type: string
          nullable: true
          description: Описание команды
          example: "Описание новой команды"
        ownerId:
          type: integer
          format: int64
          description: ID владельца команды
          example: 1
      required:
        - name
        - ownerId

    TeamPatchRequest:
      type: object
      properties:
        name:
          type: string
          description: Новое название команды
          example: "Частично обновленная команда"
        description:
          type: string
          nullable: true
          description: Новое описание команды
          example: "Частично обновленное описание команды"
        ownerId:
          type: integer
          format: int64
          description: ID нового владельца команды
          example: 1
      required:
        - ownerId
    AddUserToTeamRequest:
      type: object
      properties:
        userId:
          type: integer
          format: int64
          description: ID пользователя для добавления в команду
          example: 1
      required:
        - userId
    UserSummary:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID пользователя
          example: 1
        firstName:
          type: string
          description: Имя пользователя
          example: "Иван"
        lastName:
          type: string
          description: Фамилия пользователя
          example: "Иванов"
        email:
          type: string
          format: email
          description: Email пользователя
          example: "ivan.ivanov@example.com"
        role:
          type: string
          description: Роль пользователя
          enum:
            - ADMIN
            - RECRUITER
            - VIEWER
          example: "RECRUITER"
      required:
        - id
        - firstName
        - lastName
        - email
        - role
    PaginatedResponse:
      type: object
      description: Базовый класс для всех пагинированных ответов
      properties:
        content:
          type: array
          description: Список элементов на текущей странице
          items:
            type: object
        totalElements:
          type: integer
          format: int64
          description: Общее количество элементов
          example: 150
        totalPages:
          type: integer
          format: int64
          description: Общее количество страниц
          example: 15
        number:
          type: integer
          format: int64
          description: Номер текущей страницы (начиная с 0)
          example: 0
        size:
          type: integer
          format: int64
          description: Размер страницы
          example: 10
      required:
        - content
        - totalElements
        - totalPages
        - number
        - size
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Сообщение об ошибке
          example: Произошла ошибка при обработке запроса
        error:
          type: string
          description: Тип ошибки
          example: VALIDATION_ERROR
        timestamp:
          type: string
          format: date-time
          description: Время возникновения ошибки
          example: '2024-01-15T10:30:45Z'
        path:
          type: string
          description: Путь запроса
          example: /api/teams
      required:
        - message
        - error
        - timestamp 