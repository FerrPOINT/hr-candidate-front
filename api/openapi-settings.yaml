openapi: 3.0.0
info:
  title: HR Recruiter API — Settings
  version: 1.0.0
  description: |
    OpenAPI спецификация для настроек и тарифов.
    Самодостаточный файл для генерации и документации.
  contact:
    name: HR Recruiter Team
    email: support@hr-recruiter.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://localhost:8080/api/v1
    description: Local server
  - url: https://api.hr-recruiter.com/api/v1
    description: Production server
tags:
  - name: Settings
    description: Настройки системы (тарифы, брендинг)
paths:
  /branding:
    get:
      operationId: getBranding
      tags:
        - Settings
      summary: Получить настройки брендинга
      security:
        - AdminAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branding'
    put:
      operationId: updateBranding
      tags:
        - Settings
      summary: Обновить настройки брендинга
      security:
        - AdminAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandingUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branding'
  /tariffs:
    get:
      operationId: listTariffs
      tags:
        - Settings
      summary: Список тарифов
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tariff'
    post:
      operationId: createTariff
      tags:
        - Settings
      summary: Создать тариф
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TariffCreateRequest'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tariff'
  /tariffs/{id}:
    get:
      operationId: getTariff
      tags:
        - Settings
      summary: Получить тариф
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tariff'
    put:
      operationId: updateTariff
      tags:
        - Settings
      summary: Обновить тариф
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tariff'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tariff'
    delete:
      operationId: deleteTariff
      tags:
        - Settings
      summary: Удалить тариф по ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Тариф успешно удален
  /tariff/info:
    get:
      operationId: getTariffInfo
      tags:
        - Settings
      summary: Информация о тарифе пользователя
      security:
        - AdminAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  interviewsLeft:
                    type: integer
                  until:
                    type: string
components:
  schemas:
    Branding:
      type: object
      properties:
        id:
          type: integer
          format: int64
        companyName:
          type: string
        logoUrl:
          type: string
        primaryColor:
          type: string
        secondaryColor:
          type: string
        emailSignature:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - companyName
        - createdAt
    BrandingUpdateRequest:
      type: object
      properties:
        companyName:
          type: string
        logoUrl:
          type: string
        primaryColor:
          type: string
        secondaryColor:
          type: string
        emailSignature:
          type: string
    Tariff:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        features:
          type: array
          items:
            type: string
        price:
          type: number
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - price
        - createdAt
    TariffCreateRequest:
      type: object
      properties:
        name:
          type: string
        features:
          type: array
          items:
            type: string
        price:
          type: number
        isActive:
          type: boolean
      required:
        - name
        - price
    TariffUpdateRequest:
      type: object
      properties:
        name:
          type: string
        features:
          type: array
          items:
            type: string
        price:
          type: number
        isActive:
          type: boolean
  securitySchemes:
    CandidateAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    AdminAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 