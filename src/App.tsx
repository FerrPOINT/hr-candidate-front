import React, { useState, useEffect } from 'react';
import { BrowserRouter as Router, Routes, Route, Navigate, useLocation } from 'react-router-dom';
import { useAuthStore } from './store/authStore';

// Candidate Pages - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ Single Page –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
import CandidateApp from './candidate/App';

// --- –ù–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ—Å—Å–∏–∏ ---
const SessionInitializer: React.FC<{ zone: 'crm' | 'candidate' }> = ({ zone }) => {
  const { restoreSession } = useAuthStore();
  const location = useLocation();

  useEffect(() => {
    console.log('üîç SessionInitializer - zone:', zone, 'pathname:', location.pathname);
    
    // –î–ª—è CRM-–∑–æ–Ω—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø—É—Ç—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å /recruiter, /admin, /login
    if (zone === 'crm' && (/^\/(recruiter|admin|login)/.test(location.pathname) || location.pathname === '/')) {
      console.log('üîç SessionInitializer - Initializing CRM session');
      restoreSession().catch(error => {
        console.error('Failed to restore CRM session:', error);
      });
    }
    // –î–ª—è candidate-–∑–æ–Ω—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø—É—Ç—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å /interview, /session, /candidate
    if (zone === 'candidate' && (/^\/(interview|session|candidate)/.test(location.pathname))) {
      console.log('üîç SessionInitializer - Initializing candidate session');
      restoreSession().catch(error => {
        console.error('Failed to restore candidate session:', error);
      });
    }
  }, [zone, location.pathname, restoreSession]);
  return null;
};

function App() {
  console.log('üîç App - Rendering, current pathname:', window.location.pathname);
  
  return (
    <Router>
      {/* –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏ –¥–ª—è CRM */}
      <SessionInitializer zone="crm" />
      {/* –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏ –¥–ª—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ */}
      <SessionInitializer zone="candidate" />
      <Routes>
        {/* –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–º –Ω–∞ –∏–Ω—Ç–µ—Ä–≤—å—é */}
        <Route path="/" element={<Navigate to="/interview/1" replace />} />
        
        {/* Single Page –¥–ª—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ - –≤–µ—Å—å —Ñ–ª–æ—É –≤ –æ–¥–Ω–æ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ */}
        <Route path="/interview/:interviewId" element={<CandidateApp />} />
        
        {/* –°—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ */}
        <Route path="/candidate/*" element={<CandidateApp />} />
        
        {/* Fallback */}
        <Route path="*" element={<Navigate to="/" replace />} />
      </Routes>
    </Router>
  );
}

export default App; 