#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const { spawn } = require('child_process');

// ะััะธ ะบ SSL ัะตััะธัะธะบะฐัะฐะผ
const sslDir = path.join(__dirname, '..', 'ssl');
const certPath = path.join(sslDir, 'localhost.crt');
const keyPath = path.join(sslDir, 'localhost.key');

// ะกะพะทะดะฐะตะผ ะดะธัะตะบัะพัะธั SSL ะตัะปะธ ะตั ะฝะตั
if (!fs.existsSync(sslDir)) {
  fs.mkdirSync(sslDir, { recursive: true });
}

// ะัะพะฒะตััะตะผ ะฝะฐะปะธัะธะต ัะตััะธัะธะบะฐัะพะฒ
if (!fs.existsSync(certPath) || !fs.existsSync(keyPath)) {
  console.log('๐ SSL ัะตััะธัะธะบะฐัั ะฝะต ะฝะฐะนะดะตะฝั. ะกะพะทะดะฐะตะผ ัะฐะผะพะฟะพะดะฟะธัะฐะฝะฝัะต...');
  
  // ะกะพะทะดะฐะตะผ ัะฐะผะพะฟะพะดะฟะธัะฐะฝะฝัะน ัะตััะธัะธะบะฐั
  const { execSync } = require('child_process');
  
  try {
    execSync(`openssl req -x509 -newkey rsa:2048 -keyout "${keyPath}" -out "${certPath}" -days 365 -nodes -subj "/CN=localhost"`, {
      stdio: 'inherit'
    });
    console.log('โ SSL ัะตััะธัะธะบะฐัั ัะพะทะดะฐะฝั');
  } catch (error) {
    console.error('โ ะัะธะฑะบะฐ ัะพะทะดะฐะฝะธั SSL ัะตััะธัะธะบะฐัะพะฒ:', error.message);
    console.log('๐ก ะฃััะฐะฝะพะฒะธัะต OpenSSL ะธะปะธ ัะพะทะดะฐะนัะต ัะตััะธัะธะบะฐัั ะฒัััะฝัั');
    process.exit(1);
  }
}

// ะฃััะฐะฝะฐะฒะปะธะฒะฐะตะผ ะฟะตัะตะผะตะฝะฝัะต ะพะบััะถะตะฝะธั ะดะปั HTTPS
process.env.HTTPS = 'true';
process.env.SSL_CRT_FILE = certPath;
process.env.SSL_KEY_FILE = keyPath;

console.log('๐ ะะฐะฟััะบ ะฟัะธะปะพะถะตะฝะธั ั HTTPS...');
console.log(`๐ ะกะตััะธัะธะบะฐั: ${certPath}`);
console.log(`๐ ะะปัั: ${keyPath}`);
console.log('๐ ะัะธะปะพะถะตะฝะธะต ะฑัะดะตั ะดะพัััะฟะฝะพ ะฟะพ ะฐะดัะตัั: https://localhost:3000');

// ะะฐะฟััะบะฐะตะผ React ะฟัะธะปะพะถะตะฝะธะต
const child = spawn('npm', ['start'], {
  stdio: 'inherit',
  shell: true
});

child.on('error', (error) => {
  console.error('โ ะัะธะฑะบะฐ ะทะฐะฟััะบะฐ:', error);
  process.exit(1);
});

child.on('close', (code) => {
  console.log(`๐ฑ ะัะธะปะพะถะตะฝะธะต ะทะฐะฒะตััะตะฝะพ ั ะบะพะดะพะผ: ${code}`);
  process.exit(code);
});

// ะะฑัะฐะฑะพัะบะฐ ัะธะณะฝะฐะปะพะฒ ะทะฐะฒะตััะตะฝะธั
process.on('SIGINT', () => {
  console.log('\n๐ ะะพะปััะตะฝ ัะธะณะฝะฐะป ะทะฐะฒะตััะตะฝะธั...');
  child.kill('SIGINT');
});

process.on('SIGTERM', () => {
  console.log('\n๐ ะะพะปััะตะฝ ัะธะณะฝะฐะป ะทะฐะฒะตััะตะฝะธั...');
  child.kill('SIGTERM');
}); 